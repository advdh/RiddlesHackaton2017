Exception handling: log as much data as possible and return PassMove

To improve replayability, use a seed for randomization, based on first board.
	Write this seed to the log.
	Recreate the Random object every round based on this seed, 
	so that even timing differences do not influence the randomization

MonteCarlo with max. duration: increase count and simulation count at the same time
while (!timeToStop)
{
	for all previous moves: add one more simulation
	generate new move, and simulate it <count> times
}
pick one with best statistics

v20, 4d4866ca-a96a-4d23-84b1-3937e90b52ae, testbot, round 8: should kill (4,4) or (5,3) to win in 1
	Generally, v20 seems to value birth moves too high and kill moves too low

v20, 3f2e4dd7-1f3a-4ecb-bb72-3eeb8123ae73, Gynther:
	Round 30: very limited time left: only 3 moves are simulated
	Generally: don't spend so much time in the beginning. Already around round 16, timelimit is under 1,000 ms
	Try to cut off simulations, which have bad statistics

v20, c50ead8d-f98c-477f-b763-7c87666c3b19, SBRNC:
	Round 30: opponent does a birth move, but only sacrifices one cell. That should not be allowed.
	Round 36: killing birthmove: loose in 1, but we think win in 1
		Should do smarter moves in 'rest of game'


v19, c578b859-6b8f-4afc-a009-4824cb8144f1, SBRNC:
	Round 19: win in one if we kill (17,9)

v23, ba250225-0dd3-4462-bcc6-665c0f06cae0, testbot:
	Round 4: birth in the middle of nowhere

v24, add5c6d3-cc84-47e9-88ec-477cf1a56929, Renegade
	Round 15: opponent has 3; can win in 1

v27, OIO, b29012e8-a732-4cce-ae10-bb1059e3b303: Why don't we win just after round 61?
	Round 63: best move is especially good after 2 generations. 
	TODO: give more winbonus for next generation than for nextnext generation

v29, UnmanagedCode, c8d3239e-2688-4b02-99b9-888f17afc009
	Round 17: should do a birth 10,0 11,0 12,0
